# This is a basic workflow to help you get started with Actions

name: Weimarnetz Firmware Build

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
  push:
    branches: [ 21.02.7 ]
    paths:
      - 'modules'
      - 'Makefile'
      - 'configs/**'
      - 'embedded-files/**'
      - 'patches/**'
      - 'scripts/**' 
  pull_request:
    branches: [ 21.02.7 ]
    paths:
      - 'modules'
      - 'Makefile'
      - 'configs/**'
      - 'embedded-files/**'
      - 'patches/**'
      - 'scripts/**' 

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    strategy:
      matrix:
        target: [ath79_generic, ath79_generic-tight, ath79_tiny, mpc85xx_p1010, ramips_mt7620, ramips_mt7621, ramips_mt76x8, x86_generic, x86_64, ipq40xx_generic]
      fail-fast: false
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: cache 
      uses: actions/cache@v2
      env:
        cache-name: cache
      with:
        path: dl
        key: ${{ runner.os }}-build-${{ env.cache-name }}
    - run: |
        git fetch --prune --unshallow
    
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install sudo openssh-server rsync git subversion build-essential libncurses5-dev zlib1g-dev gawk unzip libxml-perl flex wget gawk libncurses5-dev gettext quilt python2 libssl-dev rsync qemu-utils 
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean

    # Build firmware for target
    - name: Build ${{ matrix.target }} target
      run: |
        make TARGET=${{ matrix.target }} -j$(nproc)
    - name: upload
      if: github.event_name == 'push'
      env:
        SSH_KEY: ${{ secrets.BUILDBOT_PRIVATE_KEY }}
      run: |
        eval "$(ssh-agent -s)"
        ssh-add - <<< "${SSH_KEY}"
        rsync -avz '-e ssh -o StrictHostKeyChecking=no -p22223' openwrt-base/ buildbot@buildbot.weimarnetz.de:/openwrt-base
